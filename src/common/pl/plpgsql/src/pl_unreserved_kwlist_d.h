/*-------------------------------------------------------------------------
 *
 * pl_unreserved_kwlist_d.h
 *    List of keywords represented as a ScanKeywordList.
 *
 * Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 * NOTES
 *  ******************************
 *  *** DO NOT EDIT THIS FILE! ***
 *  ******************************
 *
 *  It has been GENERATED by src/tools/gen_keywordlist.pl
 *
 *-------------------------------------------------------------------------
 */

#ifndef PL_UNRESERVED_KWLIST_D_H
#define PL_UNRESERVED_KWLIST_D_H

#include "parser/kwlookup.h"

static const char UnreservedPLKeywords_kw_string[] =
	"absolute\0"
	"alias\0"
	"alter\0"
	"array\0"
	"as\0"
	"backward\0"
	"bulk\0"
	"call\0"
	"collect\0"
	"commit\0"
	"condition\0"
	"constant\0"
	"continue\0"
	"current\0"
	"cursor\0"
	"debug\0"
	"detail\0"
	"distinct\0"
	"do\0"
	"dump\0"
	"errcode\0"
	"error\0"
	"except\0"
	"exceptions\0"
	"first\0"
	"forward\0"
	"found\0"
	"function\0"
	"handler\0"
	"hint\0"
	"immediate\0"
	"index\0"
	"info\0"
	"instantiation\0"
	"intersect\0"
	"is\0"
	"iterate\0"
	"last\0"
	"leave\0"
	"log\0"
	"merge\0"
	"message\0"
	"message_text\0"
	"multiset\0"
	"next\0"
	"no\0"
	"notice\0"
	"option\0"
	"package\0"
	"perform\0"
	"pg_exception_context\0"
	"pg_exception_detail\0"
	"pg_exception_hint\0"
	"pragma\0"
	"prior\0"
	"procedure\0"
	"query\0"
	"record\0"
	"relative\0"
	"release\0"
	"repeat\0"
	"replace\0"
	"result_oid\0"
	"returned_sqlstate\0"
	"reverse\0"
	"rollback\0"
	"row_count\0"
	"rowtype\0"
	"save\0"
	"savepoint\0"
	"scroll\0"
	"slice\0"
	"sqlexception\0"
	"sqlstate\0"
	"sqlwarning\0"
	"stacked\0"
	"sys_refcursor\0"
	"table\0"
	"type\0"
	"union\0"
	"until\0"
	"use_column\0"
	"use_variable\0"
	"variable_conflict\0"
	"varray\0"
	"warning\0"
	"with";

static const uint16 UnreservedPLKeywords_kw_offsets[] = {
	0,
	9,
	15,
	21,
	27,
	30,
	39,
	44,
	49,
	57,
	64,
	74,
	83,
	92,
	100,
	107,
	113,
	120,
	129,
	132,
	137,
	145,
	151,
	158,
	169,
	175,
	183,
	189,
	198,
	206,
	211,
	221,
	227,
	232,
	246,
	256,
	259,
	267,
	272,
	278,
	282,
	288,
	296,
	309,
	318,
	323,
	326,
	333,
	340,
	348,
	356,
	377,
	397,
	415,
	422,
	428,
	438,
	444,
	451,
	460,
	468,
	475,
	483,
	494,
	512,
	520,
	529,
	539,
	547,
	552,
	562,
	569,
	575,
	588,
	597,
	608,
	616,
	630,
	636,
	641,
	647,
	653,
	664,
	677,
	695,
	702,
	710,
};

#define UNRESERVEDPLKEYWORDS_NUM_KEYWORDS 87

static int
UnreservedPLKeywords_hash_func(const void *key, size_t keylen)
{
	static const int16 h[175] = {
		0,     32767, 32767, 49,    63,    66,    26,    60,
		27,    -23,   32767, 32767, 32767, 0,     32767, 32767,
		32767, -52,   32767, 15,    31,    32767, 0,     26,
		68,    32767, 26,    21,    0,     32767, 32767, 45,
		73,    32767, 32767, 32767, 13,    79,    32767, -30,
		-72,   111,   -22,   8,     -22,   0,     0,     32,
		32767, 32767, 32767, 43,    32767, 0,     0,     21,
		32767, 32767, 32767, 32767, 12,    32767, 32767, -47,
		86,    82,    32767, 32767, 37,    101,   0,     20,
		70,    66,    -14,   42,    32767, 78,    32767, -70,
		32767, -12,   0,     32767, 32767, 32767, 18,    74,
		42,    -89,   32767, -50,   0,     32767, 32767, 32767,
		38,    32767, 32767, 25,    0,     32767, 32767, 0,
		-82,   77,    -25,   32767, -49,   0,     32767, 32767,
		74,    32767, 32767, 32767, -1,    32767, 32767, 30,
		67,    32767, 67,    32767, 32767, 3,     32767, 3,
		-11,   40,    32,    32767, 51,    0,     9,     6,
		-44,   32767, 32767, 70,    7,     -17,   0,     77,
		26,    32767, 32767, 1,     119,   56,    124,   0,
		32767, 34,    52,    51,    22,    -65,   32767, -71,
		0,     32767, 58,    32767, 32767, -21,   50,    32767,
		63,    32767, 0,     0,     32767, 32767, 7
	};

	const unsigned char *k = (const unsigned char *) key;
	uint32		a = 0;
	uint32		b = 1;

	while (keylen--)
	{
		unsigned char c = *k++ | 0x20;

		a = a * 257 + c;
		b = b * 17 + c;
	}
	return h[a % 175] + h[b % 175];
}

static const ScanKeywordList UnreservedPLKeywords = {
	UnreservedPLKeywords_kw_string,
	UnreservedPLKeywords_kw_offsets,
	UnreservedPLKeywords_hash_func,
	UNRESERVEDPLKEYWORDS_NUM_KEYWORDS,
	20
};

#endif							/* PL_UNRESERVED_KWLIST_D_H */
